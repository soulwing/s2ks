/*
 * File created on Mar 12, 2019
 *
 * Copyright (c) 2019 Carl Harris, Jr
 * and others as noted
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.soulwing.s2ks;

import java.security.Key;

/**
 * An encryption key that was generated by a KMS.
 *
 * @author Carl Harris
 */
public interface EncryptionKey {

  /**
   * Gets this encryption key as a JCA key.
   * @return JCA key object
   */
  Key getKey();

  /**
   * Gets the cipher text variant of the encryption key (which is an opaque
   * blob that has been encrypted by a KMS master key).
   * @return cipher text key
   */
  byte[] getCipherText();

  /**
   * Gets the ID of the KMS master key that was used to create this encryption
   * key.
   * @return master key ID
   */
  String getMasterKeyId();

  /**
   * Destroys the in-memory representation of this key so that it is no
   * longer useful.
   */
  void destroy();

}
